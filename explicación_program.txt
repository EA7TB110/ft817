ARDUINO ICOM CI-V address translator / transverter interface

Project presentation

To operate on the 4m (70 MHz) band, I run a transverter, which converts all RX and TX signals from 70 Mhz to 28 MHz. 

High-end ICOM transceivers have a a possibility to operate in TRANSVERTER mode : in this mode, the RF (to be considered as IF = intermediate frequency) in/out is available on the transverter port, and the display can present the operating frequency with a programmable  offset. 

This is very handy to operate, but unfortunately on the other hand the CI-V CAT data is always remaining at the IF frequency ...  so spots from the DX cluster cannot be directly passed to command the frequency, and in return, the electronic log will register QSO's at the IF-frequency instead of  the effective working frequency. Unless your logging / DX-cluster software is extremely smart and able to put your transceiver in TRANSVERTER mode or apply a frequency offset.

But even in this case, what with your PA (like the SPE),  if it is controlled for changing bands & antenna's by the CAT info  ?

Solution : the ARDUINO CI-V address translator and transverter interface hereby presented will handle all the above issues in a complete transparent manner, and can even power-up the transverter if required !

The project presented has been realized / tested with Icom IC-7600 TRX, MixW32 v2.16 logging software and OZ2M 4m transverter.



Functional description

First of all, the ICOM transceiver can be put into TRANSVERTER mode ( in and out ) by 2 methods:

By applying +12v on the accessory connector. Typically, when the transverter is powered, it will provide the +12v signal to TRX. This is the ICOM 'AUTO' mode. This + 12v signal can be applied as well to the module, indicating that the transverter is active.

By issuing a CAT command . The is equivalent to 'MANUAL' method, or changing the settings in the corresponding menu.

Now, the Arduino module is 'virtually' inserted between the PC (CAT Controller) and your transceiver, and provides a separate CI-V output for the PA CAT data.  Physically, it is connected (simply plugged in with 3.5mm plug) as an extra device to the (existing) CAT line between PC and TRX, and provides a separate output port for the PA.



RED 3.5mm socket for PA, BLUE & GREEN for TRX / PC

The trick is that it will ijn fact function as a 'proxy server' between PC, TRX and PA:

Between PC and TRX, it will listen for commands (frequency & mode) coming from the PC towards a certain address, and retransmit these on the same CAT line to the TRX on the actual TRX address. And in return, frequency & mode information from the TRX will be translated towards the PC as coming from the 'virtual TRX' address. 

While translating addresses, the module will apply a frequency offset and take into account if the transverter must be powered-up and the TRX set to TRANSVERTER mode.   When the transverter is manually powered up, the module will check if the frequency offset is valid and possible (e.g. selecting on the TRX 20m  band will generate an ERROR). 

On the side, the actual operating frequency will be made available to the PA on a separate CAT port. The information will be sent in the CI-V  'tranceive' format, addressed  to all listeners.

The actual working frequency , mode and transverter status are displayed on a 2x 8 LCD  for convenience. A switched output (by relay conatcts) for powering-up the Transverter is provided, as alternative the transverter status can be fed to the module.



Power, relay contact and transverter status available on the DB9 connector

Limitations

The Icom CI-V CAT system is based on a single 'bus' where all data is exchanged based on addresses, but where collisions are possiible and likely ! 

Ideally, the proxy should have been inserted between 2 separate CAT lines (TRX-proxy and proxy-PC), but this would have required the capability of listening simultaneously on 2 lines - something that is not possible on low-end ARDUINO controllers, unless choosing the MEGA board, which offers 4 on board serial ports (see further K9JM Icom CI-V router). On the smaller Arduino boards, more than one serial port can be declared, but listening is only possible on one at time. On the other hand, transmitting simultaneously on more than one port ( in this case TRX-PC   and PA  CAT lines ) is possible !

So, when running on only one listening port , the timing becomes essential and critical. 

As is, the systems works nicely & smoothly with the described setup ( IC-7600 & MixW32 v2.16) , all running on 9k6. Only the essential commands (frequency & mode) are handled by the proxy, no other commands so far. When a command is passed from PC to TRX, the proxy will look for an acknowledge of TRX and emit a short beep as confirmation, but will not attempt to re-issue the command till the ack is received.  Output for SPE is available on 9k6 as well.

When the TRX is set into 'transceive' mode,  when rotating the VFO dial, the frequency info is smoothly retransmitted towards the PC, and off course mode changes are immediately transferred.

 

Construction

The project was built in an EDDYSTONE aluminium case 60 x 110 x 30 mm.PAy attention to decoupling of RF of all I / O lines.

 

More info about the CI-V protocol

More insight information about the CI-V protocol can be found on following sites, should you want to adapt the sketch or experiment yourself:

Website of DF4OR - Ekki : providing step-by-step clear information about the protocol

K9JM CI-V sniffer :  this small DOS 'sniffer' program will print the CI-V datagrams according to COM port and baud rate set - very useful for debugging

K9JM CI-V router : James developed a nice router shield (with 3 isolated ports) and sketch, based on Arduino MEGA board.

K9JM James provides as well detailed information about the electrical interface specs . The conclusion is that:

a logical High > 3.6v

a logical Low < 0,8v

the bus line is pulled up by default to +5v and the current sinking capability of ICOM CI-V CT-17 device is 2,5 mA.. This means that any device - including CT-17 - connected and 'talking' must be able to pull the line to logical low by drawing 2,5 mA. With the circuit diagram provided, up to 50 mA can be pulled down, so there is ample margin. 

 

Arduino sketch

Below is the sketch  or download it here.   It was compiled with IDE version 1.0.6 - IMPORTANT : Should you get errors when compiling, use the same version of IDE !  You still can download previous versions from ARDUINO website .  

IMPORTANT: Please note that the software & device concept is presented 'as is' with no guarantees whatsoever and can be used free of license cost by individual  HAMs, but not  used for any commercial purpose, as the intellectual property remains entirely by the author.  
